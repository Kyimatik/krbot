from aiogram import Bot, Dispatcher, Router, types , F 
from aiogram.enums import ParseMode
from aiogram.enums import ContentType
from aiogram.filters import Command, StateFilter
from aiogram.types import Message , CallbackQuery ,FSInputFile
from aiogram.types import ReplyKeyboardMarkup , InlineKeyboardMarkup , InlineKeyboardButton , KeyboardButton , ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
import asyncio
from aiogram.exceptions import TelegramForbiddenError
from aiogram.fsm.state import StatesGroup , State
import os
from dotenv import load_dotenv
from buttons import main_keyboard,bookmaker_keyboard,withdrawal_keyboard,main_kb,num_request, keyboard ,paykeyboard

load_dotenv(".env")


TOKEN = os.getenv("TOKEN")
group_id = os.getenv("GROUP")

bot = Bot(token=TOKEN)
dp = Dispatcher()

onex_photo = "AgACAgIAAxkBAAMKaDc4sUpQMcyp1MfcsE6e2PviwV8AAovyMRttGcBJchrr5PFiTYwBAAMCAAN5AAM2BA"
xIdPhoto = "AgACAgIAAxkBAAMIaDc4qCRsHHq7UchE6-LhTYXI7foAAoryMRttGcBJC8MuYtPctKoBAAMCAAN5AAM2BA"
ucanchangeid = "AgACAgIAAxkBAAMIaDc4qCRsHHq7UchE6-LhTYXI7foAAoryMRttGcBJC8MuYtPctKoBAAMCAAN5AAM2BA"
instruc = "AgACAgIAAxkBAAICD2g3ge4eWvZ2KqBfiA8JgWUAAbBw5QACifQxG20ZwEnZxKefB21ijwEAAwIAA3kAAzYE"

@dp.message(Command("photos"))
async def get_photos(message: Message):
    await message.answer_photo(onex_photo)
    await message.answer_photo(xIdPhoto)
    await message.answer_photo(ucanchangeid)








# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ 1xBet ID
class DepositState(StatesGroup):
    in_out = State()
    waiting_for_1xbet_id = State()
    waiting_for_deposit_amount = State()
    bank = State()
    waiting_for_payment_proof = State()

class withdraw_opt(StatesGroup):
    withdraw_option = State()
    sumofWith = State() 
    phone_num = State()
    code = State()
    xid = State()
    

@dp.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
@dp.message(Command("start"))
async def handle_main_menu(message: Message, state: FSMContext):
    await state.clear()  # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ª—é–±–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    user = message.from_user
    name = user.full_name or user.username or "–¥—Ä—É–≥"
    text =\
        (f"–ü—Ä–∏–≤–µ—Ç, {name}!\n"
        "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ/–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤\n"
        "\n"
        "üì§ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ 0%\n"
        "üì§ –í—ã–≤–æ–¥ 0%\n"
        "üë®‚Äçüíª –†–∞–±–æ—Ç–∞–µ–º 24/7\n"    
        "‚úâÔ∏è –ù–∞—à –ö–∞–Ω–∞–ª: @royallkg\n"
                        "\n"
                        "üíµ –í–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –§–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–ª—É–∂–±–æ–π\n–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ @vajnyi_tip")
    await message.reply(text, reply_markup=main_keyboard)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –±—É–∫–º–µ–∫–µ—Ä–∞
bookmaker_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="1xBet", callback_data="bookmaker_1xbet")
        ]
    ],
    resize_keyboard=True
)


@dp.callback_query(lambda call: call.data == "deposit")
async def handle_deposit(call: CallbackQuery, state: FSMContext):
    await call.answer()

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ inline-–∫–Ω–æ–ø–∫–∏
    await bot.edit_message_reply_markup(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=None
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ inline-–∫–Ω–æ–ø–∫—É
    await bot.send_message(
        chat_id=call.message.chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–º–µ–∫–µ—Ä:",
        reply_markup=bookmaker_keyboard
    )
    await state.set_state(DepositState.in_out)

@dp.callback_query(lambda call: call.data == "bookmaker_1xbet", DepositState.in_out)
async def handle_bookmaker_1xbet(call: CallbackQuery, state: FSMContext):
    await call.answer()

    # –£–¥–∞–ª—è–µ–º inline-–∫–Ω–æ–ø–∫—É ¬´1xBet¬ª
    await bot.edit_message_reply_markup(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=None
    )

    await state.update_data(in_out="–ü–æ–ø–æ–ª–Ω–∏—Ç—å")
    
    await bot.send_photo(chat_id=call.message.chat.id,photo=onex_photo, caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à ID —Å 1xBet:")
    await state.set_state(DepositState.waiting_for_1xbet_id)




# @dp.message(F.photo)
# async def get_id_of_photo(message: Message):
#     photo_id = message.photo[-1].file_id
#     await message.answer(f"{photo_id}")


@dp.message(DepositState.waiting_for_1xbet_id)
async def process_1xbet_id(message: Message, state: FSMContext):
    one_x = message.text
    await state.update_data(onexid=message.text)
    if not one_x.isdigit():
        await message.answer("‚ùå ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    await state.update_data(user_id=one_x)

    # –ó–∞–ø—Ä–æ—Å —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è KGS (–°–û–ú):\n"
                         "–ú–∏–Ω–∏–º—É–º : 50\n"
                         "–ú–∞–∫—Å–∏–º—É–º : 100000")
    await state.set_state(DepositState.waiting_for_deposit_amount)

@dp.message(DepositState.waiting_for_deposit_amount)
async def process_deposit_amount(message: types.Message, state: FSMContext):
    amount_text = message.text.strip()

    if not amount_text.isdigit():
        await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return

    amount = int(amount_text)

    if amount < 50 or amount > 100000:
        await message.answer("‚ö†Ô∏è –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 50 –¥–æ 100000 KGS (–°–û–ú). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return

    await state.update_data(amount=amount)  

    data = await state.get_data()
    user_id = data.get("user_id")

    await message.answer("–ß–µ—Ä–µ–∑ –∫–∞–∫–æ–π –±–∞–Ω–∫ –≤–∞–º —É–¥–æ–±–Ω–æ?",reply_markup=paykeyboard)


    await state.set_state(DepositState.bank)


@dp.callback_query(F.data.in_(["mbankpay", "optimapay", "bakaipay", "odengipay"]), StateFilter(DepositState.bank))
async def withdraw_options(call : CallbackQuery, state: FSMContext):
    if call.data == "mbankpay":
        await state.set_state(DepositState.waiting_for_payment_proof)
        await state.update_data(bank = "–ú–±–∞–Ω–∫")
        await call.message.answer("""
‚ö†Ô∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç 3—Ö –ª–∏—Ü –∑–∞–ø—Ä–µ—â–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫
-----------------------------------------------------
‚ùóÔ∏è–¢–µ—Ä–º–∏–Ω–∞–ª, –µ–¥–∏–Ω–∏—Ü—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ, –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ú–±–∞–Ω–∫

–†–µ–∫–≤–∏–∑–∏—Ç—ã: <code>0709679545</code>(–ù—É—Ä—Å—É–ª—Ç–∞–Ω –ö.


–°—É–º–º–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏

-----------------------------------------------------

‚ÑπÔ∏è  –û–ø–ª–∞—Ç–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, —á–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üìé)""",parse_mode="HTML")
    elif call.data == "optimapay":
        await state.set_state(DepositState.waiting_for_payment_proof)
        await state.update_data(bank = "–û–ø—Ç–∏–º–∞")
        await call.message.answer("""
-----------------------------------------------------
‚ùóÔ∏è–¢–µ—Ä–º–∏–Ω–∞–ª, –µ–¥–∏–Ω–∏—Ü—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ, –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –û–ø—Ç–∏–º–∞

–†–µ–∫–≤–∏–∑–∏—Ç—ã: <code>0709679545</code>(–ù—É—Ä—Å—É–ª—Ç–∞–Ω –ö.


–°—É–º–º–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏

-----------------------------------------------------

‚ÑπÔ∏è  –û–ø–ª–∞—Ç–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, —á–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üìé""",parse_mode="HTML")
    elif call.data == "bakaipay":
        await state.set_state(DepositState.waiting_for_payment_proof)
        await state.update_data(bank = "–ë–∞–∫–∞–π")
        await call.message.answer("""
-----------------------------------------------------
‚ùóÔ∏è–¢–µ—Ä–º–∏–Ω–∞–ª, –µ–¥–∏–Ω–∏—Ü—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ, –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ë–∞–∫–∞–π

–†–µ–∫–≤–∏–∑–∏—Ç—ã: <code>0709679545</code>(–ù—É—Ä—Å—É–ª—Ç–∞–Ω –ö.)

–°—É–º–º–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏

-----------------------------------------------------

‚ÑπÔ∏è  –û–ø–ª–∞—Ç–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, —á–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üìé""",parse_mode="HTML")
    elif call.data == "odengipay":
        await state.update_data(bank = "–û!–î–µ–Ω—å–≥–∏")
        await state.set_state(DepositState.waiting_for_payment_proof)
        await call.message.answer("""–û!–î–µ–Ω—å–≥–∏: 0709679545(–ù—É—Ä—Å—É–ª—Ç–∞–Ω –ö.)
-----------------------------------------------------
‚ùóÔ∏è–¢–µ—Ä–º–∏–Ω–∞–ª, –µ–¥–∏–Ω–∏—Ü—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ, –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–µ–Ω—å–≥–∏ –µ—Å–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –û!–î–µ–Ω—å–≥–∏

–†–µ–∫–≤–∏–∑–∏—Ç—ã: <code>0709679545</code>(–ù—É—Ä—Å—É–ª—Ç–∞–Ω –ö.)


–°—É–º–º–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏

-----------------------------------------------------

‚ÑπÔ∏è  –û–ø–ª–∞—Ç–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, —á–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üìé""",parse_mode="HTML")

@dp.message(DepositState.waiting_for_payment_proof, F.photo)
async def payment_proof(message : Message, state: FSMContext):
    user_name = message.from_user.first_name
    us = message.from_user.username
    if user_name is None:
        user_name = message.from_user.username
    photo_id = message.photo[-1].file_id
    data = await state.get_data()
    await bot.send_photo(chat_id=group_id, photo=photo_id, caption=f"–ê–ô–î–ò - {data["user_id"]}\n{data["in_out"]}\n{data["bank"]}\n\n@{us}")
    await message.answer(f"""‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!
üÜîID 1XBET: {data["onexid"]}
–ë–∞–Ω–∫ - {data["bank"]}
üíµ–°—É–º–º–∞: {data["amount"]}
–ò–º—è: {user_name}

üí∞–ö–æ–º–∏—Å—Å–∏—è: 0%

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!

–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ - @vajnyi_tip




/start - –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞ 
""")
    await state.clear()


@dp.callback_query(lambda call: call.data=="withdraw")
async def withdraw_money(call : CallbackQuery, state: FSMContext):
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –≤–∞–º —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤: ",reply_markup=withdrawal_keyboard)
    await state.set_state(withdraw_opt.withdraw_option)

@dp.callback_query(F.data.in_(["mbank", "optima", "bakai", "odengi"]), StateFilter(withdraw_opt.withdraw_option))
async def withdraw_options(call : CallbackQuery, state: FSMContext):
    if call.data == "mbank":
        await state.set_state(withdraw_opt.phone_num)
        await state.update_data(withdraw_option = "–ú–±–∞–Ω–∫")
    elif call.data == "optima":
        await state.set_state(withdraw_opt.phone_num)
        await state.update_data(withdraw_option = "–û–ø—Ç–∏–º–∞")
    elif call.data == "bakai":
        await state.set_state(withdraw_opt.phone_num)
        await state.update_data(withdraw_option = "–ë–∞–∫–∞–π")
    elif call.data == "odengi":
        await state.update_data(withdraw_option = "–û!–î–µ–Ω—å–≥–∏")
        await state.set_state(withdraw_opt.phone_num)
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è KGS (–°–û–ú):\n"
                         "–ú–∏–Ω–∏–º—É–º : 150\n"
                         "–ú–∞–∫—Å–∏–º—É–º : 100000")
    await state.set_state(withdraw_opt.sumofWith)

@dp.message(withdraw_opt.sumofWith)
async def WaitForSum(message: Message, state: FSMContext):
    amount_text = message.text.strip()

    if not amount_text.isdigit():
        await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return

    amount = int(amount_text)

    if amount < 150 or amount > 100000:
        await message.answer("‚ö†Ô∏è –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 150 –¥–æ 100000 KGS (–°–û–ú). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return
    await state.set_state(withdraw_opt.phone_num)
    await state.update_data(amount=amount)  
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ qr-–∫–æ–¥",reply_markup=num_request)
    




@dp.message(withdraw_opt.phone_num, F.contact)
async def WaitForNumOrContact(message: Message, state: FSMContext):
    phone = message.text
    if phone is None:
        phone = message.contact.phone_number
    print(phone)
    await state.update_data(number=phone)
    await state.set_state(withdraw_opt.xid)
    await message.answer_photo(ucanchangeid, caption="""‚ö†Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å ID –Ω–µ–ª—å–∑—è –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–π ID –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –µ—â–µ —Ä–∞–∑
üÜî –í–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ 1xbet""")



@dp.message(withdraw_opt.phone_num, F.text)
async def WaitForNumOrText(message: Message, state: FSMContext):
    phone = message.text
    await state.update_data(number=phone)
    await state.set_state(withdraw_opt.xid)
    await message.answer_photo(ucanchangeid, caption="""‚ö†Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å ID –Ω–µ–ª—å–∑—è –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–π ID –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –µ—â–µ —Ä–∞–∑
üÜî –í–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ 1xbet""")
    

@dp.message(withdraw_opt.phone_num, F.photo)
async def WaitForNumOrPhoto(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    await state.update_data(number={"photo":file_id})
    await state.set_state(withdraw_opt.xid)
    await message.answer_photo(ucanchangeid, caption="""‚ö†Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å ID –Ω–µ–ª—å–∑—è –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–π ID –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –µ—â–µ —Ä–∞–∑
üÜî –í–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ 1xbet""")





@dp.message(withdraw_opt.xid)
async def how_to_withdraw(message: Message, state: FSMContext):
    await state.update_data(xid = message.text)
    await state.set_state(withdraw_opt.code)
    await message.answer_photo(instruc,caption="""–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥
                               
–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥:

1. –ó–∞—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç –±—É–∫–º–µ–∫–µ—Ä–∞
2. –í—ã–≤–µ—Å—Ç–∏ —Å–æ —Å—á–µ—Ç–∞
3. –í—ã–±–∏—Ä–∞–µ–º Mobcash
4. –ü–∏—à–µ–º —Å—É–º–º—É
5. –ö–∞—Å—Å–∞: 1

–î–∞–ª—å—à–µ –¥–µ–ª–∞–µ–º –≤—Å–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å.
–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –æ—Ç –≤—ã–≤–æ–¥–∞ (1XBet)
""")


@dp.message(withdraw_opt.code)
async def how_to_code(message: Message, state: FSMContext):
    await state.update_data(code = message.text)
    await message.answer("–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ ? ",reply_markup=keyboard)



@dp.callback_query(lambda call: call.data=="cancel")
async def cancelOperation(call : CallbackQuery,state: FSMContext):
    await call.message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ")
    await bot.edit_message_reply_markup(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=None
    )
    await state.clear()
    return 


@dp.callback_query(lambda call: call.data=="send")
async def forwardOperation(call : CallbackQuery,state: FSMContext):
    user_name = call.from_user.first_name
    us = call.from_user.username
    if user_name is None:
        user_name = call.from_user.username
    await state.update_data(confirm="yes")
    data = await state.get_data()
    number = data["number"]
    if type(number) is dict:
        number_fin = number["photo"]
    else:
        number = data["number"]
    if type(number) is dict:
        await bot.send_photo(photo=number_fin,chat_id=group_id,caption=f"""‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!
–ë–∞–Ω–∫ - {data["withdraw_option"]}
–°—É–º–º–∞ - {data["amount"]}
üÜîID 1XBET: {data["xid"]}
Code - {data["code"]}
–ò–º—è: {user_name}
–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - @{us}

–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ - @vajnyi_tip
üí∞–ö–æ–º–∏—Å—Å–∏—è: 0%
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!
    """)
        await bot.send_photo(photo=number_fin,chat_id=call.message.chat.id,caption=f"""‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!
–ë–∞–Ω–∫ - {data["withdraw_option"]}
–°—É–º–º–∞ - {data["amount"]}
üÜîID 1XBET: {data["xid"]}
–ò–º—è: {user_name}

–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ - @vajnyi_tip
üí∞–ö–æ–º–∏—Å—Å–∏—è: 0%
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!



/start - –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞ 
    """)
    else:
        await bot.send_message(chat_id=group_id, text=f"""‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!
–ë–∞–Ω–∫ - {data["withdraw_option"]}
–ù–æ–º–µ—Ä - {data['number']}
–°—É–º–º–∞ - {data["amount"]}
üÜîID 1XBET: {data["xid"]}
Code - {data["code"]}
–ò–º—è: {user_name}
–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - @{us}

–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ - @vajnyi_tip
üí∞–ö–æ–º–∏—Å—Å–∏—è: 0%
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!
    """)
        await bot.send_message(chat_id=call.message.chat.id, text=f"""‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!
–ë–∞–Ω–∫ - {data["withdraw_option"]}
–ù–æ–º–µ—Ä - {data['number']}
–°—É–º–º–∞ - {data["amount"]}
üÜîID 1XBET: {data["xid"]}
–ò–º—è: {user_name}

–°–ª—É–∂–±–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ - @vajnyi_tip
üí∞–ö–æ–º–∏—Å—Å–∏—è: 0%
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ!



/start - –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞ 
    """)
        
        
    await state.clear()


    




@dp.message(lambda message: message.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def handle_main_menu(message: Message):
    await handle_main_menu(message)

async def main():
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    asyncio.run(main()) # —Ä–∞–Ω–Ω–∏–º –≥–ª–∞–≤ —Ñ—É–Ω–∫—Ü–∏—é 